/*
 * VRCLinking
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = VRCLinkingAPI.Client.OpenAPIDateConverter;

namespace VRCLinkingAPI.Model
{
    /// <summary>
    /// SearchMember
    /// </summary>
    [DataContract(Name = "SearchMember")]
    public partial class SearchMember
    {

        /// <summary>
        /// Gets or Sets AgeVerified
        /// </summary>
        [DataMember(Name = "ageVerified", IsRequired = true, EmitDefaultValue = true)]
        public AgeVerification AgeVerified { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="SearchMember" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected SearchMember() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="SearchMember" /> class.
        /// </summary>
        /// <param name="id">id (required).</param>
        /// <param name="username">username.</param>
        /// <param name="avatar">avatar.</param>
        /// <param name="discordRoles">discordRoles (required).</param>
        /// <param name="vrcId">vrcId.</param>
        /// <param name="vrcName">vrcName.</param>
        /// <param name="linkLastChanged">linkLastChanged.</param>
        /// <param name="linkCount">linkCount.</param>
        /// <param name="isVerified">isVerified.</param>
        /// <param name="ageVerified">ageVerified (required).</param>
        public SearchMember(string id = default(string), string username = default(string), string avatar = default(string), int discordRoles = default(int), string vrcId = default(string), string vrcName = default(string), DateTime? linkLastChanged = default(DateTime?), int? linkCount = default(int?), bool? isVerified = default(bool?), AgeVerification ageVerified = default(AgeVerification))
        {
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new ArgumentNullException("id is a required property for SearchMember and cannot be null");
            }
            this.Id = id;
            this.DiscordRoles = discordRoles;
            this.AgeVerified = ageVerified;
            this.Username = username;
            this.Avatar = avatar;
            this.VrcId = vrcId;
            this.VrcName = vrcName;
            this.LinkLastChanged = linkLastChanged;
            this.LinkCount = linkCount;
            this.IsVerified = isVerified;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Username
        /// </summary>
        [DataMember(Name = "username", EmitDefaultValue = true)]
        public string Username { get; set; }

        /// <summary>
        /// Gets or Sets Avatar
        /// </summary>
        [DataMember(Name = "avatar", EmitDefaultValue = true)]
        public string Avatar { get; set; }

        /// <summary>
        /// Gets or Sets DiscordRoles
        /// </summary>
        [DataMember(Name = "discordRoles", IsRequired = true, EmitDefaultValue = true)]
        public int DiscordRoles { get; set; }

        /// <summary>
        /// Gets or Sets VrcId
        /// </summary>
        [DataMember(Name = "vrcId", EmitDefaultValue = true)]
        public string VrcId { get; set; }

        /// <summary>
        /// Gets or Sets VrcName
        /// </summary>
        [DataMember(Name = "vrcName", EmitDefaultValue = true)]
        public string VrcName { get; set; }

        /// <summary>
        /// Gets or Sets LinkLastChanged
        /// </summary>
        [DataMember(Name = "linkLastChanged", EmitDefaultValue = true)]
        public DateTime? LinkLastChanged { get; set; }

        /// <summary>
        /// Gets or Sets LinkCount
        /// </summary>
        [DataMember(Name = "linkCount", EmitDefaultValue = true)]
        public int? LinkCount { get; set; }

        /// <summary>
        /// Gets or Sets IsVerified
        /// </summary>
        [DataMember(Name = "isVerified", EmitDefaultValue = true)]
        public bool? IsVerified { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SearchMember {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Username: ").Append(Username).Append("\n");
            sb.Append("  Avatar: ").Append(Avatar).Append("\n");
            sb.Append("  DiscordRoles: ").Append(DiscordRoles).Append("\n");
            sb.Append("  VrcId: ").Append(VrcId).Append("\n");
            sb.Append("  VrcName: ").Append(VrcName).Append("\n");
            sb.Append("  LinkLastChanged: ").Append(LinkLastChanged).Append("\n");
            sb.Append("  LinkCount: ").Append(LinkCount).Append("\n");
            sb.Append("  IsVerified: ").Append(IsVerified).Append("\n");
            sb.Append("  AgeVerified: ").Append(AgeVerified).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
