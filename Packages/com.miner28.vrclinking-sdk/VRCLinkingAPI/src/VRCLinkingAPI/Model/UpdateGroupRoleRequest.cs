/*
 * VRCLinking
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = VRCLinkingAPI.Client.OpenAPIDateConverter;

namespace VRCLinkingAPI.Model
{
    /// <summary>
    /// UpdateGroupRoleRequest
    /// </summary>
    [DataContract(Name = "UpdateGroupRoleRequest")]
    public partial class UpdateGroupRoleRequest
    {

        /// <summary>
        /// Gets or Sets Action
        /// </summary>
        [DataMember(Name = "action", IsRequired = true, EmitDefaultValue = true)]
        public GroupAction Action { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateGroupRoleRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected UpdateGroupRoleRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateGroupRoleRequest" /> class.
        /// </summary>
        /// <param name="id">id (required).</param>
        /// <param name="discordRoleId">discordRoleId.</param>
        /// <param name="groupRoleId">groupRoleId.</param>
        /// <param name="action">action (required).</param>
        public UpdateGroupRoleRequest(string id = default(string), string discordRoleId = default(string), string groupRoleId = default(string), GroupAction action = default(GroupAction))
        {
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new ArgumentNullException("id is a required property for UpdateGroupRoleRequest and cannot be null");
            }
            this.Id = id;
            this.Action = action;
            this.DiscordRoleId = discordRoleId;
            this.GroupRoleId = groupRoleId;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets DiscordRoleId
        /// </summary>
        [DataMember(Name = "discordRoleId", EmitDefaultValue = true)]
        public string DiscordRoleId { get; set; }

        /// <summary>
        /// Gets or Sets GroupRoleId
        /// </summary>
        [DataMember(Name = "groupRoleId", EmitDefaultValue = true)]
        public string GroupRoleId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateGroupRoleRequest {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  DiscordRoleId: ").Append(DiscordRoleId).Append("\n");
            sb.Append("  GroupRoleId: ").Append(GroupRoleId).Append("\n");
            sb.Append("  Action: ").Append(Action).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
