/*
 * VRCLinking
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = VRCLinkingAPI.Client.OpenAPIDateConverter;

namespace VRCLinkingAPI.Model
{
    /// <summary>
    /// GetGroupRolesResponse
    /// </summary>
    [DataContract(Name = "GetGroupRolesResponse")]
    public partial class GetGroupRolesResponse
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetGroupRolesResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetGroupRolesResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetGroupRolesResponse" /> class.
        /// </summary>
        /// <param name="everyoneRole">everyoneRole (required).</param>
        /// <param name="guildRoles">guildRoles (required).</param>
        /// <param name="groupRoles">groupRoles (required).</param>
        /// <param name="linkedGroupRoles">linkedGroupRoles (required).</param>
        public GetGroupRolesResponse(GroupLinkedRole everyoneRole = default(GroupLinkedRole), List<Role> guildRoles = default(List<Role>), List<GroupRole> groupRoles = default(List<GroupRole>), List<GroupLinkedRole> linkedGroupRoles = default(List<GroupLinkedRole>))
        {
            // to ensure "everyoneRole" is required (not null)
            if (everyoneRole == null)
            {
                throw new ArgumentNullException("everyoneRole is a required property for GetGroupRolesResponse and cannot be null");
            }
            this.EveryoneRole = everyoneRole;
            // to ensure "guildRoles" is required (not null)
            if (guildRoles == null)
            {
                throw new ArgumentNullException("guildRoles is a required property for GetGroupRolesResponse and cannot be null");
            }
            this.GuildRoles = guildRoles;
            // to ensure "groupRoles" is required (not null)
            if (groupRoles == null)
            {
                throw new ArgumentNullException("groupRoles is a required property for GetGroupRolesResponse and cannot be null");
            }
            this.GroupRoles = groupRoles;
            // to ensure "linkedGroupRoles" is required (not null)
            if (linkedGroupRoles == null)
            {
                throw new ArgumentNullException("linkedGroupRoles is a required property for GetGroupRolesResponse and cannot be null");
            }
            this.LinkedGroupRoles = linkedGroupRoles;
        }

        /// <summary>
        /// Gets or Sets EveryoneRole
        /// </summary>
        [DataMember(Name = "everyoneRole", IsRequired = true, EmitDefaultValue = true)]
        public GroupLinkedRole EveryoneRole { get; set; }

        /// <summary>
        /// Gets or Sets GuildRoles
        /// </summary>
        [DataMember(Name = "guildRoles", IsRequired = true, EmitDefaultValue = true)]
        public List<Role> GuildRoles { get; set; }

        /// <summary>
        /// Gets or Sets GroupRoles
        /// </summary>
        [DataMember(Name = "groupRoles", IsRequired = true, EmitDefaultValue = true)]
        public List<GroupRole> GroupRoles { get; set; }

        /// <summary>
        /// Gets or Sets LinkedGroupRoles
        /// </summary>
        [DataMember(Name = "linkedGroupRoles", IsRequired = true, EmitDefaultValue = true)]
        public List<GroupLinkedRole> LinkedGroupRoles { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetGroupRolesResponse {\n");
            sb.Append("  EveryoneRole: ").Append(EveryoneRole).Append("\n");
            sb.Append("  GuildRoles: ").Append(GuildRoles).Append("\n");
            sb.Append("  GroupRoles: ").Append(GroupRoles).Append("\n");
            sb.Append("  LinkedGroupRoles: ").Append(LinkedGroupRoles).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
