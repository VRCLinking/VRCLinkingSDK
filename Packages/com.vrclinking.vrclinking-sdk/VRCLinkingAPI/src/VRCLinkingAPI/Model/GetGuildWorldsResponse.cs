/*
 * VRCLinking
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = VRCLinkingAPI.Client.OpenAPIDateConverter;

namespace VRCLinkingAPI.Model
{
    /// <summary>
    /// GetGuildWorldsResponse
    /// </summary>
    [DataContract(Name = "GetGuildWorldsResponse")]
    public partial class GetGuildWorldsResponse
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetGuildWorldsResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetGuildWorldsResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetGuildWorldsResponse" /> class.
        /// </summary>
        /// <param name="guild">guild (required).</param>
        /// <param name="worlds">worlds (required).</param>
        /// <param name="groupRoles">groupRoles (required).</param>
        /// <param name="discordRoles">discordRoles (required).</param>
        public GetGuildWorldsResponse(LimitedGuild guild = default(LimitedGuild), List<WorldSettingsDto> worlds = default(List<WorldSettingsDto>), List<GroupRole> groupRoles = default(List<GroupRole>), List<DiscordRoleDto> discordRoles = default(List<DiscordRoleDto>))
        {
            // to ensure "guild" is required (not null)
            if (guild == null)
            {
                throw new ArgumentNullException("guild is a required property for GetGuildWorldsResponse and cannot be null");
            }
            this.Guild = guild;
            // to ensure "worlds" is required (not null)
            if (worlds == null)
            {
                throw new ArgumentNullException("worlds is a required property for GetGuildWorldsResponse and cannot be null");
            }
            this.Worlds = worlds;
            // to ensure "groupRoles" is required (not null)
            if (groupRoles == null)
            {
                throw new ArgumentNullException("groupRoles is a required property for GetGuildWorldsResponse and cannot be null");
            }
            this.GroupRoles = groupRoles;
            // to ensure "discordRoles" is required (not null)
            if (discordRoles == null)
            {
                throw new ArgumentNullException("discordRoles is a required property for GetGuildWorldsResponse and cannot be null");
            }
            this.DiscordRoles = discordRoles;
        }

        /// <summary>
        /// Gets or Sets Guild
        /// </summary>
        [DataMember(Name = "guild", IsRequired = true, EmitDefaultValue = true)]
        public LimitedGuild Guild { get; set; }

        /// <summary>
        /// Gets or Sets Worlds
        /// </summary>
        [DataMember(Name = "worlds", IsRequired = true, EmitDefaultValue = true)]
        public List<WorldSettingsDto> Worlds { get; set; }

        /// <summary>
        /// Gets or Sets GroupRoles
        /// </summary>
        [DataMember(Name = "groupRoles", IsRequired = true, EmitDefaultValue = true)]
        public List<GroupRole> GroupRoles { get; set; }

        /// <summary>
        /// Gets or Sets DiscordRoles
        /// </summary>
        [DataMember(Name = "discordRoles", IsRequired = true, EmitDefaultValue = true)]
        public List<DiscordRoleDto> DiscordRoles { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetGuildWorldsResponse {\n");
            sb.Append("  Guild: ").Append(Guild).Append("\n");
            sb.Append("  Worlds: ").Append(Worlds).Append("\n");
            sb.Append("  GroupRoles: ").Append(GroupRoles).Append("\n");
            sb.Append("  DiscordRoles: ").Append(DiscordRoles).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
