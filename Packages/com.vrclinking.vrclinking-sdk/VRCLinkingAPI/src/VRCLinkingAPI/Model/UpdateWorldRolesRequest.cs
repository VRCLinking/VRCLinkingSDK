/*
 * VRCLinking
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = VRCLinkingAPI.Client.OpenAPIDateConverter;

namespace VRCLinkingAPI.Model
{
    /// <summary>
    /// UpdateWorldRolesRequest
    /// </summary>
    [DataContract(Name = "UpdateWorldRolesRequest")]
    public partial class UpdateWorldRolesRequest
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateWorldRolesRequest" /> class.
        /// </summary>
        /// <param name="discordEncodeRoles">discordEncodeRoles.</param>
        /// <param name="discordAlwaysEncodeRoles">discordAlwaysEncodeRoles.</param>
        /// <param name="groupEncodeRoles">groupEncodeRoles.</param>
        /// <param name="groupAlwaysEncodeRoles">groupAlwaysEncodeRoles.</param>
        public UpdateWorldRolesRequest(List<string> discordEncodeRoles = default(List<string>), List<string> discordAlwaysEncodeRoles = default(List<string>), List<string> groupEncodeRoles = default(List<string>), List<string> groupAlwaysEncodeRoles = default(List<string>))
        {
            this.DiscordEncodeRoles = discordEncodeRoles;
            this.DiscordAlwaysEncodeRoles = discordAlwaysEncodeRoles;
            this.GroupEncodeRoles = groupEncodeRoles;
            this.GroupAlwaysEncodeRoles = groupAlwaysEncodeRoles;
        }

        /// <summary>
        /// Gets or Sets DiscordEncodeRoles
        /// </summary>
        [DataMember(Name = "discordEncodeRoles", EmitDefaultValue = true)]
        public List<string> DiscordEncodeRoles { get; set; }

        /// <summary>
        /// Gets or Sets DiscordAlwaysEncodeRoles
        /// </summary>
        [DataMember(Name = "discordAlwaysEncodeRoles", EmitDefaultValue = true)]
        public List<string> DiscordAlwaysEncodeRoles { get; set; }

        /// <summary>
        /// Gets or Sets GroupEncodeRoles
        /// </summary>
        [DataMember(Name = "groupEncodeRoles", EmitDefaultValue = true)]
        public List<string> GroupEncodeRoles { get; set; }

        /// <summary>
        /// Gets or Sets GroupAlwaysEncodeRoles
        /// </summary>
        [DataMember(Name = "groupAlwaysEncodeRoles", EmitDefaultValue = true)]
        public List<string> GroupAlwaysEncodeRoles { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateWorldRolesRequest {\n");
            sb.Append("  DiscordEncodeRoles: ").Append(DiscordEncodeRoles).Append("\n");
            sb.Append("  DiscordAlwaysEncodeRoles: ").Append(DiscordAlwaysEncodeRoles).Append("\n");
            sb.Append("  GroupEncodeRoles: ").Append(GroupEncodeRoles).Append("\n");
            sb.Append("  GroupAlwaysEncodeRoles: ").Append(GroupAlwaysEncodeRoles).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
