/*
 * VRCLinking
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = VRCLinkingAPI.Client.OpenAPIDateConverter;

namespace VRCLinkingAPI.Model
{
    /// <summary>
    /// ImageSlotDto
    /// </summary>
    [DataContract(Name = "ImageSlotDto")]
    public partial class ImageSlotDto
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ImageSlotDto" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ImageSlotDto() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ImageSlotDto" /> class.
        /// </summary>
        /// <param name="id">id (required).</param>
        /// <param name="worldId">worldId (required).</param>
        /// <param name="imageId">imageId.</param>
        /// <param name="slotId">slotId (required).</param>
        /// <param name="order">order (required).</param>
        /// <param name="name">name.</param>
        /// <param name="width">width (required).</param>
        /// <param name="height">height (required).</param>
        /// <param name="maxDimension">maxDimension (required).</param>
        public ImageSlotDto(Guid id = default(Guid), Guid worldId = default(Guid), Guid? imageId = default(Guid?), int slotId = default(int), int order = default(int), string name = default(string), int width = default(int), int height = default(int), int maxDimension = default(int))
        {
            this.Id = id;
            this.WorldId = worldId;
            this.SlotId = slotId;
            this.Order = order;
            this.Width = width;
            this.Height = height;
            this.MaxDimension = maxDimension;
            this.ImageId = imageId;
            this.Name = name;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or Sets WorldId
        /// </summary>
        [DataMember(Name = "worldId", IsRequired = true, EmitDefaultValue = true)]
        public Guid WorldId { get; set; }

        /// <summary>
        /// Gets or Sets ImageId
        /// </summary>
        [DataMember(Name = "imageId", EmitDefaultValue = true)]
        public Guid? ImageId { get; set; }

        /// <summary>
        /// Gets or Sets SlotId
        /// </summary>
        [DataMember(Name = "slotId", IsRequired = true, EmitDefaultValue = true)]
        public int SlotId { get; set; }

        /// <summary>
        /// Gets or Sets Order
        /// </summary>
        [DataMember(Name = "order", IsRequired = true, EmitDefaultValue = true)]
        public int Order { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Width
        /// </summary>
        [DataMember(Name = "width", IsRequired = true, EmitDefaultValue = true)]
        public int Width { get; set; }

        /// <summary>
        /// Gets or Sets Height
        /// </summary>
        [DataMember(Name = "height", IsRequired = true, EmitDefaultValue = true)]
        public int Height { get; set; }

        /// <summary>
        /// Gets or Sets MaxDimension
        /// </summary>
        [DataMember(Name = "maxDimension", IsRequired = true, EmitDefaultValue = true)]
        public int MaxDimension { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ImageSlotDto {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  WorldId: ").Append(WorldId).Append("\n");
            sb.Append("  ImageId: ").Append(ImageId).Append("\n");
            sb.Append("  SlotId: ").Append(SlotId).Append("\n");
            sb.Append("  Order: ").Append(Order).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Width: ").Append(Width).Append("\n");
            sb.Append("  Height: ").Append(Height).Append("\n");
            sb.Append("  MaxDimension: ").Append(MaxDimension).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
